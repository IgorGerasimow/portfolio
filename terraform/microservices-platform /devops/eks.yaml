apiVersion: eksctl.io/v1alpha5
kind: ClusterConfig

metadata:
    name: tgm-use1-stag-platform
    region: us-east-1

nodeGroups:
    - name: tgm-use1-stag-platform
      volumeSize: 100
      volumeType: gp2
      instanceType: t3.medium
      minSize: 1
      maxSize: 5
      ami: ami-05ac566a7ec2378db
      amiFamily: AmazonLinux2
      privateNetworking: true
      ssh:
        publicKey: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDZOSBfLjQBA0R9lYbULG5IE8cp4fijw2CQUTja0ugnQxQm+GoPutoPi4bgroM9hXTHc0Kb5qYE3MLSgYDgA97sRrzzBqoE0oxJBqpgBGaoCT1b3PMrS3169PEYy5sJC3C7P/KYT71OeS0vXXJJ/xrez5H7xq24qtNSI001H2z1Jr3UtEeX3jsh7Z8Ig/2e8Fl4f3aj/W8COTo4cKKjAURM9Rm986eys+0lIaeVYKWU0yYEJFgwhNevoYXXwB0CaUB8Z5odhc1oGcTh/BXYCstiBXJEeG4U+SG9/zhWiDsHIkVbr0zLplNhmARacRi0x+S7RzLo6ZooP1l0xzOMaFEB loord@MacBook-Pro-2.local"
      tags:
        k8s.io/cluster-autoscaler/enabled: "true"
        k8s.io/cluster-autoscaler/cluster-13: "owned"  

      labels:
        nodegroup-type: tgm-use1-stag-platform
      iam:
        withAddonPolicies:
          albIngress: true
          autoScaler: true
          cloudWatch: true

#vpc:
#  cidr: 10.10.0.0/16
#  autoAllocateIPv6: true

vpc:
  id: "vpc-0bb6ba5fafccc604b"  # (optional, must match VPC ID used for each subnet below)
  cidr: "10.0.0.0/16"       # (optional, must match CIDR used by the given VPC)
  subnets:
    # must provide 'private' and/or 'public' subnets by availibility zone as shown
    private:
      us-east-1a:
        id: "subnet-0199bcb75b36d02e1"
        cidr: "10.0.0.0/19" # (optional, must match CIDR used by the given subnet)

      us-east-1b:
        id: "subnet-0ba27f4e0811c2590"
        cidr: "10.0.32.0/19"  # (optional, must match CIDR used by the given subnet)

      us-east-1c:
        id: "subnet-00294866418fb1ff5"
        cidr: "10.0.64.0/19"   # (optional, must match CIDR used by the given subnet)

#nodeGroups:
#  - name: tgm-use1-stag-platform
#    instanceType: m5.xlarge
#    desiredCapacity: 1
#    privateNetworking: true # if only 'Private' subnets are given, this must be enabled

cloudWatch:
    clusterLogging:
        # enable specific types of cluster control plane logs
        enableTypes: ["audit", "authenticator", "controllerManager"]
        # all supported types: "api", "audit", "authenticator", "controllerManager", "scheduler"
        # supported special values: "*" and "all"

#availabilityZones: ["us-east-2a", "us-east-2b", "us-east-2c"]
