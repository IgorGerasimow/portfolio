---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: values-fetcher
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: configmap-updater
  namespace: monitoring
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  # ResourceNames limits the access of the role to
  # a defined set of ConfigMap resources
  resourceNames: ["prometheus-alert-rules-values"]
  verbs: ["patch", "get", "create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: update-prometheus-alert-rules-values-cm
  namespace: monitoring
subjects:
- kind: ServiceAccount
  name: values-fetcher
  namespace: monitoring
roleRef:
  kind: Role
  name: configmap-updater
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: prometheus-alert-rules-values
  namespace: monitoring
  labels:
    app: prometheus-alert-rules-values
    owner: company-devops
    stream: company
    product: observability
    temporary: "false"
    deleteAfter: "false"
    jira: companySTREAM-16859
spec:
  concurrencyPolicy: Forbid
  schedule: "*/15 * * * *"
  successfulJobsHistoryLimit: 3
  failedJobsHistoryLimit: 3
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            app: prometheus-alert-rules-values
            owner: company-devops
            stream: company
            product: observability
            temporary: "false"
            deleteAfter: "false"
            jira: companySTREAM-16859
        spec:
          serviceAccountName: values-fetcher
          containers:
          - name: kubectl
            image: bitnami/kubectl:1.19
            volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
            command:
            - sh
            - -c
            args:
            - >-
              curl -f -# https://git.corp.com/DevOps/prometheus-alert-rules/-/raw/master/basic-alert-rules-for-helm.yml -o /tmp/values.yaml &&
              kubectl create configmap prometheus-alert-rules-values --from-file=/tmp/values.yaml -o yaml --dry-run=client |
              kubectl apply -f -
          volumes:
          - name: tmp-volume
            emptyDir:
              medium: Memory
          restartPolicy: Never
